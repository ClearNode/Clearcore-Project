policy_module(clr, 1.100.1)

########################################
#
# Declarations
#

type clr_t;
type clr_exec_t;
init_daemon_domain(clr_t, clr_exec_t)

permissive clr_t;

type clr_initrc_exec_t;
init_script_file(clr_initrc_exec_t)

type clr_conf_t;
files_type(clr_conf_t)

type clr_var_lib_t;
files_type(clr_var_lib_t)

type clr_var_run_t;
files_type(clr_var_run_t)

type clr_port_t;
corenet_port(clr_port_t)

########################################
#
# clr local policy
#
allow clr_t self:process { fork };

allow clr_t self:fifo_file rw_fifo_file_perms;
allow clr_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(clr_t, clr_conf_t, clr_conf_t)
manage_files_pattern(clr_t, clr_conf_t, clr_conf_t)

manage_dirs_pattern(clr_t, clr_var_lib_t, clr_var_lib_t)
manage_files_pattern(clr_t, clr_var_lib_t, clr_var_lib_t)
files_var_lib_filetrans(clr_t, clr_var_lib_t, { dir file })

manage_dirs_pattern(clr_t, clr_var_run_t, clr_var_run_t)
manage_files_pattern(clr_t, clr_var_run_t, clr_var_run_t)

sysnet_dns_name_resolve(clr_t)
corenet_all_recvfrom_unlabeled(clr_t)

allow clr_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(clr_t)
corenet_tcp_sendrecv_generic_node(clr_t)
corenet_tcp_sendrecv_all_ports(clr_t)
corenet_tcp_bind_generic_node(clr_t)

gen_require(`
    type clr_port_t;
')
allow clr_t clr_port_t:tcp_socket name_bind;

gen_require(`
    type clr_port_t;
')
allow clr_t clr_port_t:tcp_socket name_connect;

domain_use_interactive_fds(clr_t)

files_read_etc_files(clr_t)

miscfiles_read_localization(clr_t)

sysnet_dns_name_resolve(clr_t)

allow clr_t clr_exec_t:file execute_no_trans;
allow clr_t self:process setsched;
corecmd_exec_ls(clr_t)
corenet_tcp_connect_http_port(clr_t)
dev_read_urand(clr_t)
fs_getattr_xattr_fs(clr_t)
kernel_read_system_state(clr_t)
